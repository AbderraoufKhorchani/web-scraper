// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/all": {
            "get": {
                "description": "Retrieves all quotes from the database.",
                "tags": [
                    "All quotes"
                ],
                "summary": "Retrieves all quotes",
                "responses": {
                    "200": {
                        "description": "List of quotes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.baseQuote"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/author/{author}": {
            "get": {
                "description": "Retrieves quotes from the database based on the provided author name.",
                "tags": [
                    "Quotes by author"
                ],
                "summary": "Retrieves quotes by author",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author's name",
                        "name": "author",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of quotes by the specified author",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.baseQuote"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tag/{tag}": {
            "get": {
                "description": "Retrieves quotes from the database based on the provided tag.",
                "tags": [
                    "Quotes by tag"
                ],
                "summary": "Retrieves quotes by tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag name",
                        "name": "tag",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of quotes with the specified tag",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.baseQuote"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "description": "Retrieves all tags from the database.",
                "tags": [
                    "All tags"
                ],
                "summary": "Retrieves all tags",
                "responses": {
                    "200": {
                        "description": "List of tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.baseQuote": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
